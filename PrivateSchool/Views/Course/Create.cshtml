@model PrivateSchool.Models.ViewModels.CourseCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Course</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Course.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Course.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Course.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Course.Stream, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Course.Stream, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Course.Stream, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Course.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Course.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Course.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Course.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Course.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Course.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Course.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Course.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Course.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.Label("SelectStudentIds", "Courses", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBox("SelectStudentIds", null, htmlAttributes: new { @class = "form-control selectpicker", size = "20" })
                @*  @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.Label("SelectAssignmentIds", "Assignments", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.ListBox("SelectAssignmentIds", null, htmlAttributes: new { @class = "form-control selectpicker", size = "20" })
                @*  @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
            </div>
        </div>
        <div class="form-group">
            @Html.Label("SelectTrainerIds", "Trainers", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.ListBox("SelectTrainerIds", null, htmlAttributes: new { @class = "form-control selectpicker ", size = "20" })
                @*  @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btn-create" value="Create" class="btn btn-create" onclick="myFunction()" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/bootstrap-select.min.js"></script>

    <script>

        $("#btn-create").click(function () {
            var startDate = $("#Course_StartDate").val();
            var endDate = $("#Course_EndDate").val();
            
            if (startDate > endDate) {
                alert("End date must be after start date!")
                return false;
            }
            else {
                return true;
            }
            
        });

        

    </script>
    


}
